#!/usr/bin/env node

/**
 * Environment Setup Script
 * Creates .env file from .env.example if it doesn't exist
 */

const fs = require("fs");
const path = require("path");

const envExamplePath = path.join(__dirname, "pwa", ".env.example");
const envPath = path.join(__dirname, "pwa", ".env");

// Default .env content if .env.example doesn't exist
const defaultEnvContent = `# MarketMate Environment Configuration
# Generated by setup-env.js

# Chrome Built-in AI API Configuration
VITE_AI_MODEL=chrome.ai/gemini-nano
VITE_ENABLE_CHROME_AI=true
VITE_AI_TIMEOUT=30000

# Web Translator API Configuration
VITE_ENABLE_WEB_TRANSLATOR=true
VITE_DEFAULT_SOURCE_LANGUAGE=en
VITE_SUPPORTED_LANGUAGES=en,ur,es,fr,de,ja,zh

# Feature Flags
VITE_OFFLINE_MODE=true
VITE_ENABLE_CACHE=true
VITE_SHOW_PRIVACY_BADGE=true

# Development/Production Settings
VITE_ENV=development
VITE_DEBUG=true
VITE_USE_MOCK_APIS=false

# Application Settings
VITE_MAX_IMAGES=5
VITE_MAX_VOICE_DURATION=60
VITE_DEFAULT_CURRENCY=USD
VITE_DB_NAME=MarketMateDB
VITE_DB_VERSION=1
`;

try {
  // Check if .env already exists
  if (fs.existsSync(envPath)) {
    console.log("‚úÖ .env file already exists. Skipping setup.");
    console.log(`   Location: ${envPath}`);
    process.exit(0);
  }

  // Try to read from .env.example
  let envContent = defaultEnvContent;
  if (fs.existsSync(envExamplePath)) {
    envContent = fs.readFileSync(envExamplePath, "utf-8");
    console.log("üìã Using .env.example as template");
  } else {
    console.log("üìù Using default configuration");
  }

  // Create .env file
  fs.writeFileSync(envPath, envContent, "utf-8");
  console.log("‚úÖ .env file created successfully!");
  console.log(`   Location: ${envPath}`);
  console.log("");
  console.log("‚ö†Ô∏è  Next steps:");
  console.log("   1. Review and update .env with your API keys if needed");
  console.log("   2. Chrome Built-in AI APIs don't require API keys");
  console.log("   3. Web Translator API doesn't require keys either");
  console.log("   4. See API_SETUP_GUIDE.md for configuration details");
} catch (error) {
  console.error("‚ùå Error creating .env file:", error.message);
  process.exit(1);
}

